### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: xlarge

    parameters:
      slack_notify:
        description: Indicates whether to send a slack notification or not (on daily job we send notification)
        type: boolean
        default: false

    steps:
      - checkout
      - run:
          name: Create Date Weekly File
          command: |
            date +%Y-%W-v4 > date-week.txt
            echo "Date week: $(cat date-week.txt)"
      - restore_cache:
          key: npm-cache-v5-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: node-cache-v5-{{ checksum "date-week.txt" }}
      - run:
          name: Setup Node
          command: |
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            source $BASH_ENV
            nvm install `cat .nvmrc`              
      - run:
          name: Setup Python
          command: |
            pyenv versions
            pyenv global 3.9.1
            pip3 install pipenv==2021.5.29
            pipenv install
      - run:
          name: NPM Install
          command: |
            nvm use
            node --version
            npm --version
            npm ci
      - run:
          name: NPM Build content-repo docs
          command: |
            nvm use
            npm run reference-docs
      - run:
          name: NPM Build marketplace docs
          command: |
            nvm use
            npm run marketplace-docs
      - run:
          name: NPM Build
          no_output_timeout: 80m
          environment:
            ALGOLIA_INDEX: demisto
          command: |
            nvm use
            npm run heapstats
            npm run build-docusaurus
            echo "Build is done. Create tar of the build dir"
            tar czf build-site.tar.gz build
      - store_artifacts:
          path: build-site.tar.gz
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - save_cache:
                key: npm-cache-v5-{{ checksum "package-lock.json" }}
                paths:
                  - ~/.npm
            - save_cache:
                key: node-cache-v5-{{ checksum "date-week.txt" }}
                paths:
                  - node_modules/.cache
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /home/circleci/project
          # Must be relative path from root
          paths:
            - build
      - run:
          name: Notify Slack
          when: on_fail
          command: |
            if [ "<<parameters.slack_notify>>" = "true" ]; then
              pipenv run python ./build_utils/slack_notifier.py -s "$SLACK_TOKEN" -u "$CIRCLE_BUILD_URL" -b "$CIRCLE_BUILD_NUM" -c "$CIRCLECI_TOKEN"
            fi

  deploy:
    docker:
      - image: circleci/python:3.9.1-buster-node
    resource_class: small
    parameters:
      post_comment:
        description: Indicates if to post a comment or not (on daily job we skip posting)
        type: boolean
        default: true
      slack_notify:
        description: Indicates whether to send a slack notification or not (on daily job we send notification)
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Setup Python
          command: |            
            pipenv install
      - run:
          name: Deploy to Firebase
          no_output_timeout: 30m
          command: |
            echo $FIREBASE_JSON_KEY > "$HOME"/gcloud.json
            npm install firebase-tools
            export PATH="$PATH:`pwd`/node_modules/.bin"
            export GOOGLE_APPLICATION_CREDENTIALS="$HOME"/gcloud.json

            if [ "$CIRCLE_BRANCH" = "master" ]; then
              echo "Deploying to prod as CIRCLE_BRANCH is equal to master!"
              firebase deploy --only hosting > deploy-info-firebase.txt
            else
              # Get the PR number from the CIRCLE_PULL_REQUEST env variable which is in the form of:
              # https://github.com/demisto/content-docs/pull/335
              firebase hosting:channel:deploy "pull-request-${CIRCLE_PULL_REQUEST##*/}" --only xsoar.pan.dev > deploy-info-firebase.txt
              cat deploy-info-firebase.txt
            fi

      - when:          
          condition: <<parameters.post_comment>>
          steps:
            - run:
                name: Post Comment Firebase
                command: pipenv run ./content-repo/post_github_comment.py deploy-info-firebase.txt

      - run:
          name: Notify Slack
          when: always
          command: |
            if [ "<<parameters.slack_notify>>" = "true" ]; then
              pipenv run python ./build_utils/slack_notifier.py -s "$SLACK_TOKEN" -u "$CIRCLE_BUILD_URL" -b "$CIRCLE_BUILD_NUM" -c "$CIRCLECI_TOKEN"
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              # only from non-fork
              only: /^(?!pull\/).*$/

  daily:
    triggers:
      - schedule:
          # should trigger every day at 4:00 UTC (4 hours after 12 AM upload-flow run)
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          name: nightly build
          slack_notify: true
      - deploy:
          name: nightly deploy
          post_comment: false
          slack_notify: true
          requires:
            - nightly build
