### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1
jobs:
  build:

    machine:
      image: ubuntu-2004:202101-01
      resource_class: large

    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Setup Node
          command: |
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            source $BASH_ENV
            nvm install `cat .nvmrc`              
      - run:
          name: Setup Python
          command: |
            pyenv versions
            pyenv global 3.9.1
            pip3 install pipenv
            pipenv install
      - run:
          name: NPM Install
          command: |
            nvm use
            node --version
            npm --version
            npm ci
      - run:
          name: NPM Build content-repo docs
          command: |
            nvm use
            npm run reference-docs
      - run:
          name: NPM Build marketplace docs
          command: |
            nvm use
            npm run marketplace-docs
      - run:
          name: NPM Build
          no_output_timeout: 40m
          environment:
            ALGOLIA_INDEX: demisto
          command: |
            nvm use            
            npm run heapstats
            npm run build-docusaurus
            echo "Build is done. Create tar of the build dir"
            tar czf build-site.tar.gz build
      - store_artifacts:
          path: build-site.tar.gz
      - save_cache:
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: /home/circleci/project
          # Must be relative path from root
          paths:
            - build 

  deploy:
    docker:
      - image: circleci/python:3.9.1-buster-node
    resource_class: small
    parameters:
      post_comment:
        description: Indicates if to post a comment or not (on daily job we skip posting)
        type: boolean
        default: true
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Setup Python
          command: |            
            pipenv install
      - run:
          name: Deploy to Netlify
          no_output_timeout: 30m
          command: |
            npm install netlify-cli
            export PATH="$PATH:`pwd`/node_modules/.bin"
            netlify --version
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              echo "Deploying to prod as CIRCLE_BRANCH is equal to master!"
              DEPLOG_ARG="--prod"
            else
              # Get the PR number from the CIRCLE_PULL_REQUEST env variable which is in the form of:
              # https://github.com/demisto/content-docs/pull/335
              DEPLOG_ARG="--alias=pull-request-${CIRCLE_PULL_REQUEST##*/}"
            fi
            netlify deploy -m "CircleCI build: $CIRCLE_BRANCH" -d build $DEPLOG_ARG --json > deploy-info.json
            cat deploy-info.json | jq
      - when:          
          condition: <<parameters.post_comment>>
          steps:
            - run:
                name: Post Comment 
                command: pipenv run ./content-repo/post_github_comment.py deploy-info.json

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              # only from non-fork
              only: /^(?!pull\/).*$/
  daily:
    triggers:
      - schedule:
          # should trigger every day at 13:00 UTC (4 hours after each upload-flow run)
          cron: "0 13 * * *"
          filters:
            branches:
              only:
                - master                
    jobs:
      - build
      - deploy:
          post_comment: false
          requires:
            - build
